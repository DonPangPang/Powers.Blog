// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Powers.Blog.EfCore;

#nullable disable

namespace Powers.Blog.EfCore.Migrations
{
    [DbContext(typeof(PowersBlogDbContext))]
    partial class PowersBlogDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.5");

            modelBuilder.Entity("Powers.Blog.Shared.Entity.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CreateUserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreateUserName")
                        .HasColumnType("TEXT");

                    b.Property<bool>("DeleteMark")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("EnableMark")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ModifyUserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("ModifyUserName")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("WeblogId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("WeblogId");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("Powers.Blog.Shared.Entity.Commit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CreateUserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreateUserName")
                        .HasColumnType("TEXT");

                    b.Property<bool>("DeleteMark")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("EnableMark")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ModifyUserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("ModifyUserName")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("TEXT");

                    b.Property<string>("ParentUserName")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("WeblogId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Commit");
                });

            modelBuilder.Entity("Powers.Blog.Shared.Entity.StarRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CreateUserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreateUserName")
                        .HasColumnType("TEXT");

                    b.Property<bool>("DeleteMark")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("EnableMark")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ModifyUserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("ModifyUserName")
                        .HasColumnType("TEXT");

                    b.Property<int>("StarType")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("WeblogId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("StarRecord");
                });

            modelBuilder.Entity("Powers.Blog.Shared.Entity.Tag", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CreateUserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreateUserName")
                        .HasColumnType("TEXT");

                    b.Property<bool>("DeleteMark")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("EnableMark")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ModifyUserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("ModifyUserName")
                        .HasColumnType("TEXT");

                    b.Property<string>("TagName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("WeblogId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("WeblogId");

                    b.ToTable("Tag");
                });

            modelBuilder.Entity("Powers.Blog.Shared.Entity.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Account")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CreateUserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreateUserName")
                        .HasColumnType("TEXT");

                    b.Property<bool>("DeleteMark")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<bool>("EnableMark")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Icon")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsSuper")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ModifyUserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("ModifyUserName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Powers.Blog.Shared.Entity.Weblog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CreateUserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreateUserName")
                        .HasColumnType("TEXT");

                    b.Property<bool>("DeleteMark")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("EnableMark")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ModifyUserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("ModifyUserName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Weblog");
                });

            modelBuilder.Entity("Powers.Blog.Shared.Entity.Category", b =>
                {
                    b.HasOne("Powers.Blog.Shared.Entity.Weblog", null)
                        .WithMany("Categories")
                        .HasForeignKey("WeblogId");
                });

            modelBuilder.Entity("Powers.Blog.Shared.Entity.Tag", b =>
                {
                    b.HasOne("Powers.Blog.Shared.Entity.Weblog", null)
                        .WithMany("Tags")
                        .HasForeignKey("WeblogId");
                });

            modelBuilder.Entity("Powers.Blog.Shared.Entity.Weblog", b =>
                {
                    b.Navigation("Categories");

                    b.Navigation("Tags");
                });
#pragma warning restore 612, 618
        }
    }
}
